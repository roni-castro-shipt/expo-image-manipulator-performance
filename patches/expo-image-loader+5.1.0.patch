diff --git a/node_modules/expo-image-loader/android/src/main/java/expo/modules/imageloader/ImageLoaderModule.kt b/node_modules/expo-image-loader/android/src/main/java/expo/modules/imageloader/ImageLoaderModule.kt
index 681341f..f63aba6 100644
--- a/node_modules/expo-image-loader/android/src/main/java/expo/modules/imageloader/ImageLoaderModule.kt
+++ b/node_modules/expo-image-loader/android/src/main/java/expo/modules/imageloader/ImageLoaderModule.kt
@@ -79,7 +79,8 @@ class ImageLoaderModule(val context: Context) : InternalModule, ImageLoaderInter
       .diskCacheStrategy(DiskCacheStrategy.NONE)
       .skipMemoryCache(true)
       .load(normalizedUrl)
-      .into(object : CustomTarget<Bitmap>() {
+      .centerInside()
+      .into(object : CustomTarget<Bitmap>(2048, 2048) {
         override fun onResourceReady(resource: Bitmap, transition: Transition<in Bitmap>?) {
           resultListener.onSuccess(resource)
         }
diff --git a/node_modules/expo-image-loader/ios/EXImageLoader/EXImageLoader.m b/node_modules/expo-image-loader/ios/EXImageLoader/EXImageLoader.m
index 29674b4..496a893 100644
--- a/node_modules/expo-image-loader/ios/EXImageLoader/EXImageLoader.m
+++ b/node_modules/expo-image-loader/ios/EXImageLoader/EXImageLoader.m
@@ -32,10 +32,18 @@ EX_REGISTER_MODULE();
 - (void)loadImageForURL:(NSURL *)imageURL
       completionHandler:(EXImageLoaderCompletionBlock)completionHandler
 {
-  [[_bridge moduleForName:@"ImageLoader" lazilyLoadIfNecessary:YES] loadImageWithURLRequest:[NSURLRequest requestWithURL:imageURL]
-                                                                  callback:^(NSError *error, UIImage *loadedImage) {
-                                                                    completionHandler(error, loadedImage);
-                                                                  }];
+  id<RCTImageLoaderProtocol> imageLoader = [_bridge moduleForName:@"ImageLoader" lazilyLoadIfNecessary:YES];
+  
+  [imageLoader loadImageWithURLRequest:[NSURLRequest requestWithURL:imageURL]
+                                   size:CGSizeMake(2048, 2048)
+                                  scale:1
+                                clipped:NO
+                             resizeMode:RCTResizeModeContain
+                          progressBlock:nil
+                       partialLoadBlock:nil
+                        completionBlock:^(NSError *error, UIImage *loadedImage) {
+      completionHandler(error, loadedImage);
+    }];
 }
 
 @end
